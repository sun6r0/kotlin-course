package lessons.lesson10.homeworks

fun main() {
    task5()
}

//Задачи на работу со словарём
//1 Создайте пустой неизменяемый словарь, где ключи и значения - целые числа.
val emptyMap = emptyMap<Int, Int>()

// 2 Создайте словарь, инициализированный несколькими парами "ключ-значение", где ключи - float, а значения - double
val map2 = mapOf<Float, Double>(1.4f to 2.0, 1.5f to 3.2, 7.4232f to 8.99)

// 3 Создайте изменяемый словарь, где ключи - целые числа, а значения - строки.
val map3 = mapOf(1 to "2", 2 to "4", 3 to "6")

// 4 Имея изменяемый словарь, добавьте в него новые пары "ключ-значение".
val mutableMap = mutableMapOf(1 to "One", 2 to "Two")

fun task4() {
    mutableMap.put(4, "Four")
    mutableMap.put(5, "Five")
}
// 5 Используя словарь из предыдущего задания, извлеките значение, используя ключ. Попробуй получить значение с ключом, которого в словаре нет.
fun task5() {
    println(mutableMap[2])
    println(mutableMap[9])
}

//6 Удалите определенный элемент из изменяемого словаря по его ключу.
fun task6() {
    mutableMap.remove(2)
}

//7 Создайте словарь (ключи Double, значения Int) и выведи в цикле результат деления ключа на значение.
// Не забудь обработать деление на 0 (в этом случае выведи слово “бесконечность”)
val divisionMap = mapOf(10.0 to 2, 5.0 to 0, 8.0 to 4)

fun deleting() {
    for ((key, value) in divisionMap) {
        val result = if (value == 0) {
            "бесконечность"
        } else {
            (key / value).toString()
        }
        println("$key / $value = $result")
    }
}

//8 Измените значение для существующего ключа в изменяемом словаре.
fun task8() {
    mutableMap.replace(4, "Четыре")
}

//9 Создайте два словаря и объедините их в третьем изменяемом словаре через циклы.
fun task9() {
    val map1 = mapOf(1 to "One", 2 to "Two")
    val map2 = mapOf(3 to "Three", 4 to "Four")

    val mergedMap = mutableMapOf<Int, String>()

    for ((key, value) in map1) {
        mergedMap[key] = value
    }

    for ((key, value) in map2) {
        mergedMap[key] = value
    }

}

//10 Создайте словарь, где ключами являются строки, а значениями - списки целых чисел. Добавьте несколько элементов в этот словарь.
val listMap10 = mutableMapOf(
    "first" to listOf(1, 2, 3),
    "second" to listOf(4, 5, 6)
)

// 11 Создай словарь, в котором ключи - это целые числа, а значения - изменяемые множества строк.
// Добавь данные в словарь. Получи значение по ключу (это должно быть множество строк) и добавь в это множество ещё строку.
// Распечатай полученное множество.
val mutableSetMap = mutableMapOf<Int, MutableSet<String>>()

fun task11() {

    mutableSetMap[1] = mutableSetOf("apple", "banana")
    mutableSetMap[2] = mutableSetOf("orange", "grape")

    val set = mutableSetMap[1]
    set?.add("cherry")

    println(mutableSetMap[1])

}


// 12 Создай словарь, где ключами будут пары чисел.
// Через перебор найди значение у которого пара будет содержать цифру 5 в качестве первого или второго значения.

val pairDictionary = mapOf(
    Pair(1, 2) to "Первое значение",
    Pair(5, 8) to "Второе значение",
    Pair(3, 5) to "Третье значение",
    Pair(4, 7) to "Четвертое значение",
    Pair(9, 6) to "Пятое значение",
    Pair(5, 5) to "Шестое значение"
)

fun task12() {
for ((key, value) in pairDictionary) {
    if (key.first == 5 || key.second == 5) {
        println("Пара (${key.first}, ${key.second}) -> $value")
    }
}
}


//Задачи на подбор оптимального типа для словаря

// 1 Словарь библиотека: Ключи - автор книги, значения - список книг
val library = mapOf(
    "Толстой" to listOf("Война и мир", "Анна Каренина"),
    "Достоевский" to listOf("Преступление и наказание", "Идиот"),
    "Пушкин" to listOf("Евгений Онегин", "Капитанская дочка")
)

// 2 Справочник растений: Ключи - типы растений (например, "Цветы", "Деревья"), значения - списки названий растений
val plantsGuide = mapOf(
    "Цветы" to listOf("Роза", "Тюльпан", "Ромашка"),
    "Деревья" to listOf("Дуб", "Береза", "Сосна"),
    "Кустарники" to listOf("Сирень", "Жасмин")
)

// 3 Четвертьфинала: Ключи - названия спортивных команд, значения - списки игроков каждой команды
val quarterFinals = mapOf(
    "Команда А" to listOf("Иванов", "Петров", "Сидоров"),
    "Команда Б" to listOf("Козлов", "Орлов", "Соколов"),
    "Команда В" to listOf("Медведев", "Волков", "Зайцев")
)

// 4 Курс лечения: Ключи - даты, значения - список препаратов принимаемых в дату
val treatmentCourse = mapOf(
    "2024-01-01" to listOf("Аспирин", "Витамин C"),
    "2024-01-02" to listOf("Аспирин", "Витамин C", "Кальций"),
    "2024-01-03" to listOf("Витамин C", "Кальций")
)

// 5 Словарь путешественника: Ключи - страны, значения - словари из городов со списком интересных мест.
val travelerDictionary = mapOf(
    "Франция" to mapOf(
        "Париж" to listOf("Эйфелева башня", "Лувр", "Нотр-Дам"),
        "Марсель" to listOf("Старый порт", "Базилика Нотр-Дам-де-ла-Гард")
    ),
    "Италия" to mapOf(
        "Рим" to listOf("Колизей", "Пантеон", "Ватикан"),
        "Флоренция" to listOf("Собор Санта-Мария-дель-Фьоре", "Галерея Уффици")
    )
)